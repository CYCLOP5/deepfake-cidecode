{
    "plain_frames": {
        "prediction": "DEEP-FAKE",
        "fake_probability": 87.38,
        "real_probability": 0,
        "location": "output/bomboclat/plain_frames/bomboclat"
    },
    "mri": {
        "prediction": "REAL",
        "fake_probability": 0,
        "real_probability": 71.41999999999999,
        "location": "output/bomboclat/mri/bomboclat"
    },
    "audio": {
        "prediction": "Error: Could not process the audio file."
    },
    "video": {
        "name": "bomboclat",
        "location": "/home/cyclops/Music/deepfake-cidecode/backend/uploads/bomboclat.jpg"
    },
    "log": [
        "",
        "Input is an image. Converting to video...",
        "Converted image /home/cyclops/Music/deepfake-cidecode/backend/uploads/bomboclat.jpg to video converted_video.mp4",
        "",
        "Running Plain Frames Model...",
        "Extracting faces from the video",
        "Detecting DeepFakes using method: plain_frames",
        "Returning tf_efficientnet_b0_ns, pretrained = True",
        "Loading model weights assets/weights/deepplain.chkpt",
        "/home/cyclops/.conda/envs/plzhelp/lib/python3.10/site-packages/torch/nn/modules/module.py:1352: UserWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.",
        "  warnings.warn(\"Using a non-full backward hook when the forward contains multiple autograd Nodes \"",
        "Saved heatmap: /home/cyclops/Music/mri_gan_deepfake/output/converted_video/plain_frames/converted_video/0_0_heatmap.png",
        "Saved heatmap: /home/cyclops/Music/mri_gan_deepfake/output/converted_video/plain_frames/converted_video/20_0_heatmap.png",
        "Saved heatmap: /home/cyclops/Music/mri_gan_deepfake/output/converted_video/plain_frames/converted_video/40_0_heatmap.png",
        "Saved heatmap: /home/cyclops/Music/mri_gan_deepfake/output/converted_video/plain_frames/converted_video/60_0_heatmap.png",
        "Saved heatmap: /home/cyclops/Music/mri_gan_deepfake/output/converted_video/plain_frames/converted_video/30_0_heatmap.png",
        "Saved heatmap: /home/cyclops/Music/mri_gan_deepfake/output/converted_video/plain_frames/converted_video/80_0_heatmap.png",
        "Saved heatmap: /home/cyclops/Music/mri_gan_deepfake/output/converted_video/plain_frames/converted_video/70_0_heatmap.png",
        "Saved heatmap: /home/cyclops/Music/mri_gan_deepfake/output/converted_video/plain_frames/converted_video/50_0_heatmap.png",
        "Saved heatmap: /home/cyclops/Music/mri_gan_deepfake/output/converted_video/plain_frames/converted_video/10_0_heatmap.png",
        "all [0.8860023  0.8698018  0.8698018  0.8698018  0.8698018  0.8698018",
        " 0.8698018  0.8698018  0.88915324]",
        "real []",
        "fake [0.8860023  0.8698018  0.8698018  0.8698018  0.8698018  0.8698018",
        " 0.8698018  0.8698018  0.88915324]",
        "number_fake_frames=9, number_real_frames=0, total_number_frames=9, fake_fraction=0.3",
        "fake_prob = 87.38%, real_prob = 0%  pred=1",
        "",
        "Running MRI Model...",
        "Extracting faces from the video",
        "Generating MRIs of the faces",
        "Detecting DeepFakes using method: MRI",
        "Returning tf_efficientnet_b0_ns, pretrained = True",
        "Loading model weights assets/weights/deepmri.chkpt",
        "all [0.28583968 0.28583968 0.28583968 0.28583968 0.28583968 0.28583968",
        " 0.28583968 0.28583968 0.28583968 0.28583968 0.28583968 0.28583968",
        " 0.28583968 0.28583968 0.28583968 0.28583968 0.28583968 0.28583968]",
        "real [0.28583968 0.28583968 0.28583968 0.28583968 0.28583968 0.28583968",
        " 0.28583968 0.28583968 0.28583968 0.28583968 0.28583968 0.28583968",
        " 0.28583968 0.28583968 0.28583968 0.28583968 0.28583968 0.28583968]",
        "fake []",
        "number_fake_frames=0, number_real_frames=18, total_number_frames=18, fake_fraction=0.3",
        "fake_prob = 0%, real_prob = 71.42%  pred=0",
        "",
        "Running Audio Model...",
        "/home/cyclops/Music/mri_gan_deepfake/deep_fake_detect_app.py:32: UserWarning: PySoundFile failed. Trying audioread instead.",
        "  audio, sr = librosa.load(file_path, sr=target_sr)",
        "/home/cyclops/.conda/envs/plzhelp/lib/python3.10/site-packages/librosa/core/audio.py:184: FutureWarning: librosa.core.audio.__audioread_load",
        "\tDeprecated as of librosa version 0.10.0.",
        "\tIt will be removed in librosa version 1.0.",
        "  y, sr_native = __audioread_load(path, offset, duration, dtype)",
        "Error processing extracted_audio.wav: [Errno 2] No such file or directory: 'extracted_audio.wav'",
        ""
    ]
}